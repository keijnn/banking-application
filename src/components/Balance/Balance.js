import React, { useState, useEffect } from "react"
import "./Balance.css"

export const Balance = (props) => {

  //Chrome and firefox has different styles

  // api data
  const [json, setJson] = useState({
    data: [],
    loading: true,
    error: null
  }
  )
  const accounts = [
    {
      sym: "€",
      svg: [
        <svg
          width="28"
          height="28"
          viewBox="-4 -5 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.06 13.06C9.9 13.06 10.6333 12.8867 11.26 12.54C11.9 12.18 12.4 11.6533 12.76 10.96H15.5C14.98 12.2933 14.1467 13.32 13 14.04C11.8533 14.76 10.54 15.12 9.06 15.12C7.5 15.12 6.11333 14.7 4.9 13.86C3.68667 13.0067 2.84 11.8733 2.36 10.46H0.52V8.9H2C1.97333 8.52667 1.96 8.23333 1.96 8.02C1.96 7.80667 1.97333 7.51333 2 7.14H0.52V5.58H2.36C2.84 4.16667 3.68667 3.04 4.9 2.2C6.11333 1.34667 7.5 0.919999 9.06 0.919999C10.5267 0.919999 11.8333 1.28667 12.98 2.02C14.14 2.74 14.98 3.76667 15.5 5.1H12.76C12.4 4.40667 11.9 3.88667 11.26 3.54C10.6333 3.18 9.9 3 9.06 3C8.08667 3 7.22667 3.22667 6.48 3.68C5.74667 4.13333 5.18667 4.76667 4.8 5.58H9.06V7.14H4.36C4.32 7.42 4.3 7.71333 4.3 8.02C4.3 8.32667 4.32 8.62 4.36 8.9H9.06V10.46H4.8C5.18667 11.2867 5.74667 11.9267 6.48 12.38C7.22667 12.8333 8.08667 13.06 9.06 13.06Z"
            fill="white"
          />
        </svg>,
      ],
    },
    {
      sym: "£",
      svg: [
        <svg
          width="28"
          height="28"
          viewBox="-6 -6 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.16 13.18V15.04H1.9L1.5 13.8C2.06 13.2 2.47333 12.6067 2.74 12.02C3.00667 11.42 3.14 10.68 3.14 9.8C3.14 9.53333 3.10667 9.25333 3.04 8.96H0.84V7.38H2.54C2.26 6.54 2.12 5.72667 2.12 4.94C2.12 4.04667 2.31333 3.27333 2.7 2.62C3.08667 1.96667 3.62 1.46667 4.3 1.12C4.98 0.76 5.76667 0.58 6.66 0.58C8.08667 0.58 9.16667 0.98 9.9 1.78C10.6333 2.58 11.0133 3.6 11.04 4.84H8.96C8.96 4.12 8.77333 3.55333 8.4 3.14C8.02667 2.71333 7.44667 2.5 6.66 2.5C5.94 2.5 5.36 2.70667 4.92 3.12C4.49333 3.53333 4.28 4.18 4.28 5.06C4.28 5.44667 4.32 5.82 4.4 6.18C4.48 6.54 4.59333 6.94 4.74 7.38H8.62V8.96H5.2C5.26667 9.26667 5.3 9.55333 5.3 9.82C5.3 11.1133 4.85333 12.2333 3.96 13.18H11.16Z"
            fill="white"
          />
        </svg>,
      ],
    },
    {
      sym: "$",
      svg: [
        <svg
          width="28"
          height="28"
          viewBox="-7 -5 25 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M9.88 12.04C9.88 12.7067 9.71333 13.3333 9.38 13.92C9.06 14.5067 8.58 15 7.94 15.4C7.31333 15.8 6.56667 16.04 5.7 16.12V17.74H4.4V16.12C3.14667 16 2.13333 15.6067 1.36 14.94C0.586667 14.2733 0.2 13.3933 0.2 12.3H2.64C2.68 12.82 2.84667 13.2533 3.14 13.6C3.43333 13.9333 3.85333 14.1467 4.4 14.24V9.84C3.50667 9.61333 2.78 9.38667 2.22 9.16C1.66 8.92 1.18 8.54667 0.78 8.04C0.393333 7.53333 0.2 6.84 0.2 5.96C0.2 4.85333 0.586667 3.94 1.36 3.22C2.13333 2.48667 3.14667 2.06 4.4 1.94V0.319999H5.7V1.94C6.87333 2.04667 7.81333 2.42 8.52 3.06C9.24 3.68667 9.64667 4.55333 9.74 5.66H7.3C7.26 5.24667 7.1 4.88 6.82 4.56C6.54 4.22667 6.16667 4 5.7 3.88V8.2C6.59333 8.41333 7.32 8.64 7.88 8.88C8.44 9.10667 8.91333 9.47333 9.3 9.98C9.68667 10.4733 9.88 11.16 9.88 12.04ZM2.52 5.84C2.52 6.38667 2.68 6.81333 3 7.12C3.33333 7.42667 3.8 7.67333 4.4 7.86V3.82C3.82667 3.88667 3.36667 4.09333 3.02 4.44C2.68667 4.78667 2.52 5.25333 2.52 5.84ZM5.7 14.24C6.28667 14.1467 6.74667 13.9133 7.08 13.54C7.41333 13.1533 7.58 12.6933 7.58 12.16C7.58 11.6267 7.41333 11.2133 7.08 10.92C6.76 10.6133 6.3 10.3667 5.7 10.18V14.24Z"
            fill="white"
          />
        </svg>,
      ],
    },
    {
      sym: "₩",
      svg: [
        <svg
          width="28"
          height="28"
          viewBox="-2 -8 25 25"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M20.5693 6.86136H17.5845L18.0104 5.13809H20.5693C20.8076 5.13809 21 4.94498 21 4.70721C21 4.46945 20.8069 4.27657 20.5693 4.27657H18.2234L18.7429 2.17545C18.8751 1.63374 18.9422 1.23981 18.9422 1.00545C18.9422 0.71465 18.8445 0.48074 18.6436 0.289668C18.4387 0.0951959 18.1953 0.000453497 17.8995 0.000453497C17.6092 0.000453497 17.3918 0.0698103 17.2526 0.206258C17.0903 0.366278 16.9795 0.540804 16.914 0.740035C16.8385 0.968732 16.7576 1.29217 16.6722 1.70038L16.0944 4.27657H12.8545L12.3013 2.23371C12.1347 1.62286 12.0007 1.18066 11.9037 0.919547C11.8192 0.692437 11.6619 0.476433 11.4356 0.277428C11.2264 0.0936096 10.9164 0.000226533 10.5145 0.000226533C10.1147 0.000226533 9.80053 0.0908896 9.58067 0.269722C9.34766 0.459434 9.17789 0.686091 9.0759 0.94312C8.96144 1.23301 8.82839 1.66638 8.68106 2.23144L8.13232 4.27634H4.90627L4.32942 1.70401C4.20272 1.10722 4.0563 0.652546 3.89333 0.349505C3.84664 0.263375 3.70475 0 3.10093 0C2.79992 0 2.55559 0.0954225 2.35454 0.291481C2.15508 0.485726 2.05807 0.719636 2.05807 1.005C2.05807 1.26429 2.12493 1.65686 2.25685 2.17273L2.77681 4.27589H0.430653C0.192661 4.27589 0 4.46877 0 4.70653C0 4.9443 0.192887 5.13741 0.430653 5.13741H2.98987L3.41576 6.86046H0.430653C0.192661 6.86046 0 7.05379 0 7.2911C0 7.52932 0.192887 7.72175 0.430653 7.72175H3.62882L4.55586 11.4718C4.62431 11.7458 4.70228 12.0436 4.78977 12.3655C4.87091 12.6642 4.97586 12.9247 5.10142 13.1384C5.21702 13.3351 5.36254 13.4829 5.54658 13.5888C5.72746 13.6933 5.96953 13.7463 6.266 13.7463C6.6316 13.7463 6.9113 13.6602 7.12119 13.4838C7.34241 13.2977 7.49858 13.0872 7.58516 12.8585C7.68557 12.5937 7.82406 12.1466 7.99677 11.5294L9.03646 7.7213H11.9762L13.0037 11.5319C13.1825 12.1663 13.3226 12.62 13.4196 12.8777C13.503 13.0996 13.6571 13.3045 13.8772 13.487C14.0848 13.659 14.3732 13.7465 14.7342 13.7465C15.1171 13.7465 15.411 13.6577 15.6078 13.4841C15.8204 13.2955 15.9729 13.0738 16.0611 12.8263C16.161 12.5437 16.2905 12.0874 16.4444 11.4711L17.3714 7.72153H20.5693C20.8076 7.72153 21 7.52864 21 7.29088C21.0002 7.05447 20.8076 6.86136 20.5693 6.86136ZM15.9008 5.13831L15.5144 6.86136H13.5547L13.0878 5.13831H15.9008ZM10.5159 2.30578L11.0472 4.27657H9.97755L10.5159 2.30578ZM5.09938 5.13831H7.90044L7.43806 6.86136H5.48584L5.09938 5.13831ZM6.3748 10.8233L5.67918 7.72266H7.20686L6.3748 10.8233ZM9.27196 6.86136L9.74228 5.13809H11.2793L11.7441 6.86136H9.27196ZM14.6268 10.8181L13.7881 7.72289H15.3213L14.6268 10.8181Z"
            fill="white"
          />
        </svg>,
      ],
    },
  ]
  const [info, setInfo] = useState()
  const key = "ieLWvByj0Z7obl0aLmVzmiJgbjVXZf987aoRts59"
  //Api data for balance
    useEffect(() => {
      fetch("https://vhmfz744o2.execute-api.eu-west-2.amazonaws.com/dev/data", {
        method: "get",
        headers: {
          "x-api-key": key
        }
    })
      .then(resp => resp.json())
      .then(data => { 
        setJson({data, loading: false})
        setInfo(data.body.accounts)
      })
      .catch(error => setJson({error, loading: false}))
  }, [])
  const send = [
    <svg
      className="svg_title"
      width="16"
      height="13"
      viewBox="0 0 16 13"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M0 10.9388C0 11.6635 0.58202 12.2514 1.29939 12.2514H14.2933C15.0107 12.2514 15.5927 11.6635 15.5927 10.9388V6.12572H0V10.9388ZM5.19758 9.07919C5.19758 8.8987 5.34376 8.75102 5.52242 8.75102H9.20404C9.38271 8.75102 9.52889 8.8987 9.52889 9.07919V10.1731C9.52889 10.3536 9.38271 10.5012 9.20404 10.5012H5.52242C5.34376 10.5012 5.19758 10.3536 5.19758 10.1731V9.07919ZM1.73253 9.07919C1.73253 8.8987 1.87871 8.75102 2.05737 8.75102H4.00646C4.18513 8.75102 4.33131 8.8987 4.33131 9.07919V10.1731C4.33131 10.3536 4.18513 10.5012 4.00646 10.5012H2.05737C1.87871 10.5012 1.73253 10.3536 1.73253 10.1731V9.07919ZM15.5927 1.31265V2.62531H0V1.31265C0 0.587959 0.58202 0 1.29939 0H14.2933C15.0107 0 15.5927 0.587959 15.5927 1.31265Z"
        fill="#EE4874"
      />
    </svg>,
    <p>Send Money From:</p>,
  ]
  const [activebal, setActiveBal] = useState()
  // before render major component
  if (json.loading) return <div className="balance_body loading"><h1>LOADING</h1></div>
  // after loading data from api
  if (json.data) {
    return (
      <div className="balance_body">
        <h1>{props.active === "Home" ? "Your Accounts" : send}</h1>
        {info.map((item, i) => (
          <div
            key = {i}
            className={activebal === item.currency ? "activebal" : "item_field"}
            onClick={() => {
              setActiveBal(item.currency)
              props.dataBalance(`${accounts[i].sym}${item.balance.toFixed(2)}`)
            }}
          >
            <li className="li_styles">
              {/* In Chromium different styles */}
              <p className={`${item.currency} maj`}>{accounts[i].svg}</p>
            </li>

            <p className="title">{item.title}</p>
            <p className="bal_sym">{accounts[i].svg}</p>
            <p className="bal">{item.balance.toFixed(2)}</p>
          </div>
        ))}
      </div>
    )}
}
